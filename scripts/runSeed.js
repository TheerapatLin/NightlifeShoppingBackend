#!/usr/bin/env node

/**
 * Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô Seed files
 * Usage: 
 *   npm run seed:chat-privacy
 *   node scripts/runSeed.js chat-privacy
 */

require('dotenv').config();
const mongoose = require('mongoose');

const seeders = {
  'chat-privacy': require('../seeders/chatPrivacySeed').seedChatPrivacyData,
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° seeders ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
};

async function runSeed() {
  const seedName = process.argv[2];
  
  if (!seedName) {
    console.log('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠ seed file');
    console.log('Available seeds:');
    Object.keys(seeders).forEach(name => {
      console.log(`  - ${name}`);
    });
    process.exit(1);
  }

  const seeder = seeders[seedName];
  if (!seeder) {
    console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö seed file: ${seedName}`);
    console.log('Available seeds:');
    Object.keys(seeders).forEach(name => {
      console.log(`  - ${name}`);
    });
    process.exit(1);
  }

  try {
    console.log(`üå± Running seed: ${seedName}`);
    
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/nightlife';
    await mongoose.connect(mongoUri, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('üì° Connected to MongoDB');

    // ‡∏£‡∏±‡∏ô seeder
    await seeder();
    
    console.log(`‚úÖ Seed ${seedName} completed successfully`);
    process.exit(0);
  } catch (error) {
    console.error(`‚ùå Seed ${seedName} failed:`, error);
    process.exit(1);
  }
}

runSeed();
